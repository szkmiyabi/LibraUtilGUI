using System;
using System.Collections.Generic;
using System.Linq;
using System.Text;
using System.Threading.Tasks;

namespace LibraUtilGUI
{
    class JsUtil
    {
        //cssカット
        public static string css_cut()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("var d = document;");
            jsc.Append("var delarr = new Array();");
            jsc.Append("var links = d.getElementsByTagName(\"link\");");
            jsc.Append("for(var i=0; i<links.length; i++) {");
            jsc.Append("var link = links.item(i);");
            jsc.Append("var href = link.getAttribute(\"href\");");
            jsc.Append("if(is_css_file(href) || is_css_link(link)) {");
            jsc.Append("delarr.push(href);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<delarr.length; i++) {");
            jsc.Append("var line = delarr[i];");
            jsc.Append("delete_link(line);");
            jsc.Append("}");
            jsc.Append("var tags = d.getElementsByTagName(\"*\");");
            jsc.Append("for(var i=0; i<tags.length; i++) {");
            jsc.Append("var tag = tags.item(i);");
            jsc.Append("var style = tag.getAttribute(\"style\");");
            jsc.Append("if(style !== null || style !== \"\") {");
            jsc.Append("tag.removeAttribute(\"style\");");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("var styles = d.getElementsByTagName(\"style\");");
            jsc.Append("for(i=0; i<styles.length; i++) {");
            jsc.Append("var style = styles.item(i);");
            jsc.Append("style.textContent = null;");
            jsc.Append("}");
            jsc.Append("function is_css_file(href) {");
            jsc.Append("var pat = new RegExp(\".+\\.css\");");
            jsc.Append("if(pat.test(href)) return true;");
            jsc.Append("else return false;");
            jsc.Append("}");
            jsc.Append("function is_css_link(link) {");
            jsc.Append("if(link.hasAttribute(\"type\")) {");
            jsc.Append("var pat = new RegExp(\"text/css\");");
            jsc.Append("var type = link.getAttribute(\"type\");");
            jsc.Append("if(pat.test(type)) return true;");
            jsc.Append("else return false;");
            jsc.Append("} else {");
            jsc.Append("return false;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function delete_link(line) {");
            jsc.Append("var lks = d.getElementsByTagName(\"link\");");
            jsc.Append("for(var j=0; j<lks.length; j++) {");
            jsc.Append("var lk = lks.item(j);");
            jsc.Append("var hf = lk.getAttribute(\"href\");");
            jsc.Append("if(hf === line) {");
            jsc.Append("lk.parentNode.removeChild(lk);");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            return jsc.ToString();
        }

        //alt属性値を表示
        public static string image_alt()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("var fname_flg = true;");
            jsc.Append("var img = document.getElementsByTagName(\"img\");");
            jsc.Append("for(var i=0; i<img.length; i++) {");
            jsc.Append("var imgtag = img.item(i);");
            jsc.Append("imgtag.setAttribute(\"style\", \"border:1px solid red;\");");
            jsc.Append("var span_id = \"bkm-img-span-\" + i;");
            jsc.Append("var src_val = imgtag.getAttribute(\"src\");");
            jsc.Append("var fname = get_img_filename(src_val);");
            jsc.Append("var alt_val = imgtag.getAttribute(\"alt\");");
            jsc.Append("if(alt_val === null) {");
            jsc.Append("alt_val = alt_attr_from_dirtycode(imgtag);");
            jsc.Append("}");
            jsc.Append("var html_str = \"\";");
            jsc.Append("if(alt_attr_check(imgtag)) {");
            jsc.Append("html_str += \"alt: \" + alt_val;");
            jsc.Append("} else {");
            jsc.Append("html_str += \"alt属性がない\";");
            jsc.Append("}");
            jsc.Append("if(fname_flg) {");
            jsc.Append("if(html_str !== \"\") {");
            jsc.Append("html_str += \", filename: \" + fname;");
            jsc.Append("} else {");
            jsc.Append("html_str += \"filename: \" + fname;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("var css_txt = \"color:#fff;font-size:12px;padding:1px;background:#BF0000;\";");
            jsc.Append("var span = '<span id=\"' + span_id + '\" style=\"' + css_txt + '\">' + html_str + '</span>';");
            jsc.Append("imgtag.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("tag_link_img();");
            jsc.Append("function alt_attr_from_dirtycode(obj) {");
            jsc.Append("var ret = \"\";");
            jsc.Append("var imgtag = obj.outerHTML;");
            jsc.Append("var pt = new RegExp('(alt=\")(.*?)(\")');");
            jsc.Append("if(pt.test(imgtag)) {");
            jsc.Append("ret = imgtag.match(pt)[2];");
            jsc.Append("}");
            jsc.Append("return ret;");
            jsc.Append("}");
            jsc.Append("function get_img_filename(str) {");
            jsc.Append("var ret = \"\";");
            jsc.Append("var pat = new RegExp(\"(.+)\\/(.+\\.)(JPG|jpg|GIF|gif|PNG|png|BMP|bmp)$\");");
            jsc.Append("if(pat.test(str)) {");
            jsc.Append("var arr = str.match(pat);");
            jsc.Append("ret += arr[2] + arr[3];");
            jsc.Append("}");
            jsc.Append("return ret;");
            jsc.Append("}");
            jsc.Append("function alt_attr_check(imgtag) {");
            jsc.Append("var txt = imgtag.outerHTML;");
            jsc.Append("var pt1 = new RegExp('alt=\".*\"');");
            jsc.Append("var pt2 = new RegExp('alt=');");
            jsc.Append("if(pt1.test(txt) && pt2.test(txt)) return true;");
            jsc.Append("else return false;");
            jsc.Append("}");
            jsc.Append("function tag_link_img() {");
            jsc.Append("var ats = document.getElementsByTagName(\"a\");");
            jsc.Append("var css_txt = \"border:2px dotted red;\";");
            jsc.Append("for(var i=0; i<ats.length; i++) {");
            jsc.Append("var atag = ats.item(i);");
            jsc.Append("var imgs = atag.getElementsByTagName(\"img\");");
            jsc.Append("for(var j=0; j<imgs.length; j++) {");
            jsc.Append("var img = imgs.item(j);");
            jsc.Append("img.setAttribute(\"style\", css_txt);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            return jsc.ToString();
        }

        //target属性値を表示
        public static string target_attr()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("var ats = document.getElementsByTagName(\"a\");");
            jsc.Append("for(var i=0; i<ats.length; i++) {");
            jsc.Append("var atag = ats.item(i);");
            jsc.Append("var ataghtml = atag.outerHTML;");
            jsc.Append("ataghtml = _text_clean(ataghtml);");
            jsc.Append("if(_target_attr_check(ataghtml)) {");
            jsc.Append("var target_vl = atag.getAttribute(\"target\");");
            jsc.Append("var span_id = \"bkm-target-attr-span-\" + i;");
            jsc.Append("var span_html = (target_vl === \"\") ? \"target属性有:(空)\" : \"target属性有:\" + target_vl;");
            jsc.Append("var span_css = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#008000;border-radius:5px;\";");
            jsc.Append("var span = '<span id=\"' + span_id + '\" style=\"' + span_css + '\">' + span_html + '</span>';");
            jsc.Append("atag.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function _target_attr_check(str) {");
            jsc.Append("var pt = new RegExp('target=\".*?\"');");
            jsc.Append("if(pt.test(str)) return true;");
            jsc.Append("else return false;");
            jsc.Append("}");
            jsc.Append("function _text_clean(str) {");
            jsc.Append("var ret = \"\";");
            jsc.Append("ret = str.replace(new RegExp(\"^ +\", \"mg\"), \"\");");
            jsc.Append("ret = ret.replace(new RegExp(\"\\t+\", \"mg\"), \"\");");
            jsc.Append("ret = ret.replace(new RegExp(\"(\\r\\n|\\r|\\n)\", \"mg\"), \"\");");
            jsc.Append("return str;");
            jsc.Append("}");
            return jsc.ToString();
        }

        //semantic要素を表示
        public static string semantic_check()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("function tag_paragraph() {");
            jsc.Append("var ps = document.getElementsByTagName(\"p\");");
            jsc.Append("for(var i=0; i<ps.length; i++) {");
            jsc.Append("var p = ps.item(i);");
            jsc.Append("p.setAttribute(\"style\", \"border:1px solid #3A87AD; position: relative;\");");
            jsc.Append("add_label(p, i, \"afterbegin\", \"#3A87AD\");");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_heading() {");
            jsc.Append("var tags = [\"h1\", \"h2\", \"h3\", \"h4\", \"h5\", \"h6\"];");
            jsc.Append("var idx = tags.length;");
            jsc.Append("var in_funcs = new Array();");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("var val = tags[i];");
            jsc.Append("in_funcs.push(make_funcs(val));");
            jsc.Append("}");
            jsc.Append("function make_funcs(tag) {");
            jsc.Append("return function() {");
            jsc.Append("var ts = document.getElementsByTagName(tag);");
            jsc.Append("for(var i=0; i<ts.length; i++) {");
            jsc.Append("var t = ts.item(i);");
            jsc.Append("t.setAttribute(\"style\", \"border:1px solid red; position: relative;\");");
            jsc.Append("add_label(t, i, \"afterbegin\", \"#B94A48\");");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("in_funcs[i]();");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_br() {");
            jsc.Append("var brs = document.getElementsByTagName(\"br\");");
            jsc.Append("for(var i=0; i<brs.length; i++) {");
            jsc.Append("var br = brs.item(i);");
            jsc.Append("var css_txt = \"color:#fff;font-size:90%!important;padding:1px;border-radius:3px;\";");
            jsc.Append("var span = '<span id=\"bkm-br-span-' + i + '\" style=\"' + css_txt + 'background:#888888;\">&lt;br&gt;</span>';");
            jsc.Append("br.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_semantic() {");
            jsc.Append("var tags = [\"strong\", \"em\", \"address\", \"nav\", \"section\"];");
            jsc.Append("var idx = tags.length;");
            jsc.Append("var in_funcs = new Array();");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("var val = tags[i];");
            jsc.Append("in_funcs.push(make_funcs(val));");
            jsc.Append("}");
            jsc.Append("function make_funcs(tag) {");
            jsc.Append("return function() {");
            jsc.Append("var ts = document.getElementsByTagName(tag);");
            jsc.Append("for(var i=0; i<ts.length; i++) {");
            jsc.Append("var t = ts.item(i);");
            jsc.Append("t.setAttribute(\"style\", \"border:1px solid #808080; position: relative;\");");
            jsc.Append("add_label(t, i, \"afterbegin\", \"#888888\");");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("in_funcs[i]();");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_list() {");
            jsc.Append("var tags = [\"ul\", \"ol\", \"dl\", \"dt\", \"dd\"];");
            jsc.Append("var idx = tags.length;");
            jsc.Append("var in_funcs = new Array();");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("var val = tags[i];");
            jsc.Append("in_funcs.push(make_funcs(val));");
            jsc.Append("}");
            jsc.Append("function make_funcs(tag) {");
            jsc.Append("return function() {");
            jsc.Append("var ts = document.getElementsByTagName(tag);");
            jsc.Append("for(var i=0; i<ts.length; i++) {");
            jsc.Append("var t = ts.item(i);");
            jsc.Append("t.setAttribute(\"style\", \"border:1px solid #468847; position: relative;\");");
            jsc.Append("add_label(t, i, \"afterbegin\", \"#468847\");");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("in_funcs[i]();");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_table() {");
            jsc.Append("var in_funcs = [");
            jsc.Append("function() {");
            jsc.Append("var tbls = document.getElementsByTagName(\"table\");");
            jsc.Append("for(var i=0; i<tbls.length; i++) {");
            jsc.Append("var tbl = tbls.item(i);");
            jsc.Append("tbl.setAttribute(\"style\", \"border:2px solid red!important; position: relative;\");");
            jsc.Append("add_label(tbl, i, \"beforebegin\", \"#800000\");");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<tbls.length; i++) {");
            jsc.Append("var tbl = tbls.item(i);");
            jsc.Append("var smry = tbl.getAttribute(\"summary\");");
            jsc.Append("var span = document.getElementById(\"bkm-table-span-\" + i);");
            jsc.Append("var now_label_text = span.innerHTML;");
            jsc.Append("var new_label_text = (smry === null) ? now_label_text : now_label_text + \", summary:\" + smry;");
            jsc.Append("span.innerHTML = new_label_text;");
            jsc.Append("}");
            jsc.Append("},");
            jsc.Append("function() {");
            jsc.Append("var cps = document.getElementsByTagName(\"caption\");");
            jsc.Append("for(var i=0; i<cps.length; i++) {");
            jsc.Append("var cp = cps.item(i);");
            jsc.Append("cp.setAttribute(\"style\", \"border:1px solid red!important; position: relative;\");");
            jsc.Append("add_label(cp, i, \"afterbegin\", \"#800000\");");
            jsc.Append("}");
            jsc.Append("},");
            jsc.Append("function() {");
            jsc.Append("var ths = document.getElementsByTagName(\"th\");");
            jsc.Append("for(var i=0; i<ths.length; i++) {");
            jsc.Append("var th = ths.item(i);");
            jsc.Append("th.setAttribute(\"style\", \"border:2px solid red!important; position: relative;\");");
            jsc.Append("add_label(th, i, \"afterbegin\", \"#800000\");");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<ths.length; i++) {");
            jsc.Append("var th = ths.item(i);");
            jsc.Append("var scope = th.getAttribute(\"scope\");");
            jsc.Append("var span = document.getElementById(\"bkm-th-span-\" + i);");
            jsc.Append("var now_label_text = span.innerHTML;");
            jsc.Append("var new_label_text = (scope===null) ? now_label_text : now_label_text + \", scope:\" + scope;");
            jsc.Append("span.innerHTML = new_label_text;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("];");
            jsc.Append("for(var i=0; i<in_funcs.length; i++) {");
            jsc.Append("in_funcs[i]();");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_empty_a() {");
            jsc.Append("var empas = document.querySelectorAll(\"a:empty, a span:empty\");");
            jsc.Append("var i = 0;");
            jsc.Append("for(itm of empas) {");
            jsc.Append("var href_flg = null;");
            jsc.Append("if(!itm.hasAttribute(\"name\")) {");
            jsc.Append("var css_txt = \"color:#fff;font-size:90%!important;padding:1px;border-radius:3px;\";");
            jsc.Append("var span = '<span id=\"bkm-empry-a-span-' + i + '\" style=\"' + css_txt + 'background:#C000C0;\">空リンク有</span>';");
            jsc.Append("itm.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("i++;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function add_label(obj, cnt, pos, colorcode) {");
            jsc.Append("var tag_name = obj.tagName;");
            jsc.Append("tag_name = tag_name.toLowerCase();");
            jsc.Append("var span_id = \"bkm-\" + tag_name + \"-span-\" + cnt;");
            jsc.Append("var css_txt = \"color:#fff;font-size:90%!important;font-weight:normal!important;padding:1px;border-radius:3px;\";");
            jsc.Append("css_txt += 'background:' + colorcode + ';';");
            jsc.Append("var html_str = '&lt;' + tag_name + '&gt;';");
            jsc.Append("var span = '<span id=\"' + span_id + '\" style=\"' + css_txt + '\">' + html_str + '</span>';");
            jsc.Append("obj.insertAdjacentHTML(pos, span);");
            jsc.Append("}");
            jsc.Append("tag_paragraph();");
            jsc.Append("tag_heading();");
            jsc.Append("tag_br();");
            jsc.Append("tag_semantic();");
            jsc.Append("tag_list();");
            jsc.Append("tag_table();");
            jsc.Append("tag_empty_a();");
            return jsc.ToString();
        }

        //lang属性値を表示
        public static string lang_attr()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("var alltags = document.getElementsByTagName(\"*\");");
            jsc.Append("var type = \"\";");
            jsc.Append("for(var i=0; i<alltags.length; i++) {");
            jsc.Append("var tag = alltags.item(i);");
            jsc.Append("var tag_name = tag.tagName.toLowerCase();");
            jsc.Append("if(tag.hasAttribute(\"lang\") || tag.hasAttribute(\"xml:lang\")) {");
            jsc.Append("if(tag.hasAttribute(\"lang\") && tag.hasAttribute(\"xml:lang\")) {");
            jsc.Append("type = \"all\";");
            jsc.Append("} else if(tag.hasAttribute(\"lang\") && !tag.hasAttribute(\"xml:lang\")) {");
            jsc.Append("type = \"lang-only\";");
            jsc.Append("} else if(!tag.hasAttribute(\"lang\") && tag.hasAttribute(\"xml:lang\")) {");
            jsc.Append("type = \"xml-lang-only\";");
            jsc.Append("}");
            jsc.Append("var lang_vl = \"\";");
            jsc.Append("var xml_lang_vl = \"\";");
            jsc.Append("if(type === \"all\") {");
            jsc.Append("lang_vl = tag.getAttribute(\"lang\");");
            jsc.Append("xml_lang_vl = tag.getAttribute(\"xml:lang\");");
            jsc.Append("} else if(type === \"lang-only\") {");
            jsc.Append("lang_vl = tag.getAttribute(\"lang\");");
            jsc.Append("} else if(type === \"xml-lang-only\") {");
            jsc.Append("xml_lang_vl = tag.getAttribute(\"xml:lang\");");
            jsc.Append("}");
            jsc.Append("var span_id = \"bkm-lang-attr-span-\" + i;");
            jsc.Append("var span_html = \"\";");
            jsc.Append("if(type === \"all\") {");
            jsc.Append("span_html = (lang_vl === \"\") ? \"lang属性有:(空)\" : \"lang属性有: \" + lang_vl;");
            jsc.Append("span_html += (xml_lang_vl === \"\") ? \" , xml:lang属性有:(空)\" : \" , xml:lang属性有: \" + xml_lang_vl;");
            jsc.Append("} else if(type === \"lang-only\") {");
            jsc.Append("span_html = (lang_vl === \"\") ? \"lang属性有:(空)\" : \"lang属性有: \" + lang_vl;");
            jsc.Append("} else if(type === \"xml-lang-only\") {");
            jsc.Append("span_html = (xml_lang_vl === \"\") ? \"xml:lang属性有:(空)\" : \"xml:lang属性有: \" + xml_lang_vl;");
            jsc.Append("}");
            jsc.Append("span_html = '&lt;' + tag.tagName.toLowerCase() + '&gt;要素 , ' + span_html;");
            jsc.Append("var span_css = \"padding-right:5px;color:#fff;font-size:13px;padding:1px;background:#008000;border-radius:5px;\";");
            jsc.Append("var span = '<span id=\"' + span_id + '\" style=\"' + span_css + '\">' + span_html + '</span>';");
            jsc.Append("if(tag_name === \"img\") {");
            jsc.Append("tag.insertAdjacentHTML(\"afterend\", span);");
            jsc.Append("} else {");
            jsc.Append("tag.insertAdjacentHTML(\"afterbegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            return jsc.ToString();
        }

        //label要素とtitle属性値を表示
        public static string tag_label_and_title_attr()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("function tag_label_label() {");
            jsc.Append("var lbs = document.getElementsByTagName(\"label\");");
            jsc.Append("for(var i=0; i<lbs.length; i++) {");
            jsc.Append("var lb = lbs.item(i);");
            jsc.Append("lb.setAttribute(\"style\", \"border:1px solid #468847!important; position: relative;\");");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-label-span-\" + i;");
            jsc.Append("var type = \"\";");
            jsc.Append("if(lb.hasAttribute(\"for\")) {");
            jsc.Append("type = \"for-is-yes\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#008000;border-radius:5px;\";");
            jsc.Append("} else {");
            jsc.Append("type = \"for-is-no\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C00000;border-radius:5px;\";");
            jsc.Append("}");
            jsc.Append("if(type === \"for-is-yes\") {");
            jsc.Append("var for_vl = lb.getAttribute(\"for\");");
            jsc.Append("span_html = (for_vl === \"\") ? \"for属性有:(空)\" : \"for属性有: \" + for_vl;");
            jsc.Append("span_html = '&lt;' + lb.tagName.toLowerCase() + '&gt; , ' + span_html;");
            jsc.Append("} else if(type === \"for-is-no\") {");
            jsc.Append("span_html = '&lt;' + lb.tagName.toLowerCase() + '&gt; , for属性なし';");
            jsc.Append("}");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("lb.insertAdjacentHTML(\"afterbegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_label_input() {");
            jsc.Append("var ips = document.getElementsByTagName(\"input\");");
            jsc.Append("for(var i=0; i<ips.length; i++) {");
            jsc.Append("var ip = ips.item(i);");
            jsc.Append("var typeattr = \"\";");
            jsc.Append("if(!ip.hasAttribute(\"type\")) {");
            jsc.Append("typeattr = \"text\";");
            jsc.Append("} else {");
            jsc.Append("typeattr = ip.getAttribute(\"type\");");
            jsc.Append("}");
            jsc.Append("if(typeattr === \"text\" || typeattr === \"radio\" || typeattr === \"checkbox\" || typeattr === \"password\") {");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-input-span-\" + i;");
            jsc.Append("ip.setAttribute(\"style\", \"border:1px solid blue; position: relative;\");");
            jsc.Append("var type = \"\";");
            jsc.Append("if(ip.hasAttribute(\"id\")) {");
            jsc.Append("type = \"id-yes\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#3A87AD;border-radius:5px;\";");
            jsc.Append("} else {");
            jsc.Append("type = \"id-no\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C00000;border-radius:5px;\";");
            jsc.Append("}");
            jsc.Append("if(type === \"id-yes\") {");
            jsc.Append("var id_vl = ip.getAttribute(\"id\");");
            jsc.Append("span_html = (id_vl === \"\") ? \"id属性有:(空)\" : \"id属性有: \" + id_vl;");
            jsc.Append("} else if(type === \"id-no\") {");
            jsc.Append("span_html = \"id属性なし\";");
            jsc.Append("}");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("ip.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_label_textarea() {");
            jsc.Append("var tas = document.getElementsByTagName(\"textarea\");");
            jsc.Append("for(var i=0; i<tas.length; i++) {");
            jsc.Append("var ta = tas.item(i);");
            jsc.Append("ta.setAttribute(\"style\", \"border:1px solid blue; position: relative;\");");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-textarea-span-\" + i;");
            jsc.Append("var type = \"\";");
            jsc.Append("if(ta.hasAttribute(\"id\")) {");
            jsc.Append("type = \"id-yes\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#3A87AD;border-radius:5px;\";");
            jsc.Append("} else {");
            jsc.Append("type = \"id-no\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C00000;border-radius:5px;\";");
            jsc.Append("}");
            jsc.Append("if(type === \"id-yes\") {");
            jsc.Append("var id_vl = ta.getAttribute(\"id\");");
            jsc.Append("span_html = (id_vl === \"\") ? \"id属性有:(空)\" : \"id属性有: \" + id_vl;");
            jsc.Append("} else if(type === \"id-no\") {");
            jsc.Append("span_html = \"id属性なし\";");
            jsc.Append("}");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("ta.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_label_select() {");
            jsc.Append("var sls = document.getElementsByTagName(\"select\");");
            jsc.Append("for(var i=0; i<sls.length; i++) {");
            jsc.Append("var sl = sls.item(i);");
            jsc.Append("sl.setAttribute(\"style\", \"border:1px solid blue; position: relative;\");");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-select-span-\" + i;");
            jsc.Append("var type = \"\";");
            jsc.Append("if(sl.hasAttribute(\"id\")) {");
            jsc.Append("type = \"id-yes\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#3A87AD;border-radius:5px;\";");
            jsc.Append("} else {");
            jsc.Append("type = \"id-no\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C00000;border-radius:5px;\";");
            jsc.Append("}");
            jsc.Append("if(type === \"id-yes\") {");
            jsc.Append("var id_vl = sl.getAttribute(\"id\");");
            jsc.Append("span_html = (id_vl === \"\") ? \"id属性有:(空)\" : \"id属性有: \" + id_vl;");
            jsc.Append("} else if(type === \"id-no\") {");
            jsc.Append("span_html = \"id属性なし\";");
            jsc.Append("}");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("sl.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function tag_title_attr() {");
            jsc.Append("var tags = [\"a\", \"input\", \"textarea\", \"select\"];");
            jsc.Append("var idx = tags.length;");
            jsc.Append("var in_funcs = new Array();");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("var val = tags[i];");
            jsc.Append("in_funcs.push(make_funcs(val));");
            jsc.Append("}");
            jsc.Append("function make_funcs(tag) {");
            jsc.Append("return function() {");
            jsc.Append("var ts = document.getElementsByTagName(tag);");
            jsc.Append("for(var i=0; i<ts.length; i++) {");
            jsc.Append("var t = ts.item(i);");
            jsc.Append("var typeattr = \"\";");
            jsc.Append("var tag_name = t.tagName.toLowerCase();");
            jsc.Append("if(tag_name === \"input\") {");
            jsc.Append("if(!t.hasAttribute(\"type\")) {");
            jsc.Append("typeattr = \"text\";");
            jsc.Append("} else {");
            jsc.Append("typeattr = t.getAttribute(\"type\");");
            jsc.Append("}");
            jsc.Append("if(typeattr === \"text\" || typeattr === \"radio\" || typeattr === \"checkbox\") {");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-title-attr-span-\" + i;");
            jsc.Append("var type = \"\";");
            jsc.Append("if(t.hasAttribute(\"title\")) {");
            jsc.Append("type = \"title-yes\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#008000;border-radius:5px;\";");
            jsc.Append("} else {");
            jsc.Append("type = \"title-no\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C00000;border-radius:5px;\";");
            jsc.Append("}");
            jsc.Append("if(type === \"title-yes\") {");
            jsc.Append("var title_vl = t.getAttribute(\"title\");");
            jsc.Append("span_html = (title_vl === \"\") ? \"title属性有:(空)\" : \"title属性有: \" + title_vl;");
            jsc.Append("} else if(type === \"title-no\") {");
            jsc.Append("span_html = \"title属性なし\";");
            jsc.Append("}");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("t.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("} else if(tag_name === \"textarea\" || tag_name === \"select\") {");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-title-attr-span-\" + i;");
            jsc.Append("var type = \"\";");
            jsc.Append("if(t.hasAttribute(\"title\")) {");
            jsc.Append("type = \"title-yes\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#008000;border-radius:5px;\";");
            jsc.Append("} else {");
            jsc.Append("type = \"title-no\";");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C00000;border-radius:5px;\";");
            jsc.Append("}");
            jsc.Append("if(type === \"title-yes\") {");
            jsc.Append("var title_vl = t.getAttribute(\"title\");");
            jsc.Append("span_html = (title_vl === \"\") ? \"title属性有:(空)\" : \"title属性有: \" + title_vl;");
            jsc.Append("} else if(type === \"title-no\") {");
            jsc.Append("span_html = \"title属性なし\";");
            jsc.Append("}");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("t.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("} else {");
            jsc.Append("var span_html = \"\";");
            jsc.Append("var span_style = \"\";");
            jsc.Append("var span_id = \"bkm-title-attr-span-\" + i;");
            jsc.Append("if(t.hasAttribute(\"title\")) {");
            jsc.Append("var title_vl = t.getAttribute(\"title\");");
            jsc.Append("span_style = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#008000;border-radius:5px;\";");
            jsc.Append("span_html = (title_vl === \"\") ? \"title属性有:(空)\" : \"title属性有: \" + title_vl;");
            jsc.Append("var span  = '<span id=\"' + span_id + '\" style=\"' + span_style + '\">' + span_html + '</span>';");
            jsc.Append("t.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<idx; i++) {");
            jsc.Append("in_funcs[i]();");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("tag_label_label();");
            jsc.Append("tag_label_input();");
            jsc.Append("tag_label_textarea();");
            jsc.Append("tag_label_select();");
            jsc.Append("tag_title_attr();");
            return jsc.ToString();
        }

        //文書リンクを表示
        public static string document_link()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("var regx_arr = new Array();");
            jsc.Append("var exts = [\"pdf\", \"doc\", \"docx\", \"xls\", \"xlsx\", \"jtd\", \"ppt\", \"pptx\", \"csv\", \"odt\", \"ods\", \"odp\", \"zip\"];");
            jsc.Append("for(var i=0; i<exts.length; i++) {");
            jsc.Append("var ext = exts[i];");
            jsc.Append("var in_regx = new RegExp(\"(.*\\/*)(.+\\.)(\" + ext + \")$\");");
            jsc.Append("regx_arr.push(in_regx);");
            jsc.Append("}");
            jsc.Append("var ats = document.getElementsByTagName(\"a\");");
            jsc.Append("for(var i=0; i<ats.length; i++) {");
            jsc.Append("var atag = ats.item(i);");
            jsc.Append("if(atag.hasAttribute(\"href\")) {");
            jsc.Append("href_vl = atag.getAttribute(\"href\");");
            jsc.Append("if(is_doc_link(regx_arr, href_vl)) {");
            jsc.Append("var cr_ext = get_document_type(regx_arr, href_vl);");
            jsc.Append("var span_id = \"bkm-isdocument-span-\" + i;");
            jsc.Append("var span_html = \"Fileリンク: \" + cr_ext;");
            jsc.Append("var span_css = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C000C0;border-radius:5px;\";");
            jsc.Append("var span = '<span id=\"' + span_id + '\" style=\"' + span_css + '\">' + span_html + '</span>';");
            jsc.Append("atag.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("} else if(is_premium_pdf_link(href_vl)) {");
            jsc.Append("var span_id = \"bkm-isdocument-span-\" + i;");
            jsc.Append("var span_html = \"Fileリンクの可能性有: PDF\";");
            jsc.Append("var span_css = \"padding-right:5px;color:#fff;font-size:12px;padding:1px;background:#C000C0;border-radius:5px;\";");
            jsc.Append("var span = '<span id=\"' + span_id + '\" style=\"' + span_css + '\">' + span_html + '</span>';");
            jsc.Append("atag.insertAdjacentHTML(\"beforebegin\", span);");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("function is_premium_pdf_link(str) {");
            jsc.Append("str = str.toLowerCase();");
            jsc.Append("var pt = new RegExp(/(\\.pdf#|\\.pdf\\?)/);");
            jsc.Append("if(pt.test(str)) return true;");
            jsc.Append("else return false;");
            jsc.Append("}");
            jsc.Append("function is_doc_link(arr, str) {");
            jsc.Append("var flag = false;");
            jsc.Append("for(var i=0; i<arr.length; i++) {");
            jsc.Append("var aval = arr[i];");
            jsc.Append("if(aval.test(str)) {");
            jsc.Append("flag = true;");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("return flag;");
            jsc.Append("}");
            jsc.Append("function get_document_type(arr, str) {");
            jsc.Append("var ret = \"\";");
            jsc.Append("for(var i=0; i<arr.length; i++) {");
            jsc.Append("var aval = arr[i];");
            jsc.Append("if(aval.test(str)) {");
            jsc.Append("ret = str.match(aval)[3];");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("ret = ret.toUpperCase();");
            jsc.Append("return ret;");
            jsc.Append("}");
            return jsc.ToString();
        }

        //対象ソースコード一覧を取得する(一括検査画面から)
        public static string get_srccode_list()
        {
            StringBuilder jsc = new StringBuilder();
            jsc.Append("class allSurveyByTable {");
            jsc.Append("constructor() {");
            jsc.Append("this.sp = \"<bkmk:br>\";");
            jsc.Append("this.heading = document.getElementsByTagName(\"table\").item(0);");
            jsc.Append("this.tbl = document.getElementsByTagName(\"table\").item(2);");
            jsc.Append("this.hash = {");
            jsc.Append("\"UNCOMP\": \"未判定\",");
            jsc.Append("\"PASS\":\"適合\",");
            jsc.Append("\"PASS2\":\"適合(注記)\",");
            jsc.Append("\"FAIL\":\"不適合\",");
            jsc.Append("\"NA\":\"非適用\"");
            jsc.Append("};");
            jsc.Append("this.flags = {");
            jsc.Append("\"UNCOMP\": \"CHECK\",");
            jsc.Append("\"PASS\": \"PASS_HC\",");
            jsc.Append("\"PASS2\": \"PASS2\",");
            jsc.Append("\"FAIL\": \"FAIL_HC\",");
            jsc.Append("\"NA\": \"NA_HC\"");
            jsc.Append("};");
            jsc.Append("this.nmflags = {");
            jsc.Append("\"CHECK\": \"0\",");
            jsc.Append("\"PASS_HC\": \"1\",");
            jsc.Append("\"PASS2\": \"2\",");
            jsc.Append("\"FAIL_HC\": \"3\",");
            jsc.Append("\"NA_HC\": \"4\"");
            jsc.Append("};");
            jsc.Append("}");
            jsc.Append("init_datas() {");
            jsc.Append("return this.tbl.rows;");
            jsc.Append("}");
            jsc.Append("survey_obj(row_obj) {");
            jsc.Append("return row_obj.cells.item(2);");
            jsc.Append("}");
            jsc.Append("comment_obj(row_obj) {");
            jsc.Append("return row_obj.cells.item(3);");
            jsc.Append("}");
            jsc.Append("description_obj(row_obj) {");
            jsc.Append("return row_obj.cells.item(4);");
            jsc.Append("}");
            jsc.Append("srccode_obj(row_obj) {");
            jsc.Append("return row_obj.cells.item(5);");
            jsc.Append("}");
            jsc.Append("get_text(obj) {");
            jsc.Append("return obj.getElementsByTagName(\"textarea\").item(0).value;");
            jsc.Append("}");
            jsc.Append("set_text(obj, str) {");
            jsc.Append("obj.getElementsByTagName(\"textarea\").item(0).value = str;");
            jsc.Append("}");
            jsc.Append("clear_text(obj) {");
            jsc.Append("obj.getElementsByTagName(\"textarea\").item(0).value = \"\";");
            jsc.Append("}");
            jsc.Append("set_survey(obj, flag) {");
            jsc.Append("var ts = obj.getElementsByTagName(\"select\").item(0);");
            jsc.Append("var flag_key = \"\";");
            jsc.Append("for(var key in this.hash) {");
            jsc.Append("var vl = this.hash[key];");
            jsc.Append("if(vl == flag) {");
            jsc.Append("flag_key = key;");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("var key_val = \"\";");
            jsc.Append("for(var key in this.flags) {");
            jsc.Append("if(key == flag_key) {");
            jsc.Append("key_val = this.flags[key];");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("var key_nm = 0;");
            jsc.Append("for(var key in this.nmflags) {");
            jsc.Append("if(key == key_val) {");
            jsc.Append("key_nm = Number(this.nmflags[key]);");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var i=0; i<ts.length; i++) {");
            jsc.Append("if(ts.options[i].value == key_val) {");
            jsc.Append("ts.selectedIndex = key_nm;");
            jsc.Append("var event = document.createEvent(\"HTMLEvents\");");
            jsc.Append("event.initEvent(\"change\", true, false);");
            jsc.Append("ts.dispatchEvent(event);");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("get_survey(obj) {");
            jsc.Append("var ts = obj.getElementsByTagName(\"select\").item(0);");
            jsc.Append("var idx = ts.selectedIndex + \"\";");
            jsc.Append("var primary_key = \"\";");
            jsc.Append("var secondary_key = \"\";");
            jsc.Append("var hash_val = \"\";");
            jsc.Append("for(var key in this.nmflags) {");
            jsc.Append("var val = this.nmflags[key] + \"\";");
            jsc.Append("if(idx === val) {");
            jsc.Append("primary_key = key;");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var key in this.flags) {");
            jsc.Append("var val = this.flags[key];");
            jsc.Append("if(primary_key === val) {");
            jsc.Append("secondary_key = key;");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("for(var key in this.hash) {");
            jsc.Append("if(key == secondary_key) {");
            jsc.Append("hash_val = this.hash[key];");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("return hash_val;");
            jsc.Append("}");
            jsc.Append("is_text_empty(obj) {");
            jsc.Append("var ta = obj.getElementsByTagName(\"textarea\").item(0);");
            jsc.Append("if(ta.value === \"\" || ta.value === null) return true;");
            jsc.Append("else return false;");
            jsc.Append("}");
            jsc.Append("save() {");
            jsc.Append("var d = document.getElementsByTagName(\"input\");");
            jsc.Append("for(var i=0; i < d.length; i++) {");
            jsc.Append("var itag = d.item(i);");
            jsc.Append("var ival = itag.value;");
            jsc.Append("if(ival == \"一括登録\") {");
            jsc.Append("itag.click();");
            jsc.Append("break;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("clean_text(str) {");
            jsc.Append("str = str.replace(/^ +/mg, \"\");");
            jsc.Append("str = str.replace(/\\t/mg, \"\");");
            jsc.Append("return str;");
            jsc.Append("}");
            jsc.Append("get_tech_code() {");
            jsc.Append("var rows = this.heading.rows;");
            jsc.Append("var row = rows.item(0);");
            jsc.Append("return row.cells.item(5).innerText;");
            jsc.Append("}");
            jsc.Append("}");
            jsc.Append("let app = new allSurveyByTable();");
            jsc.Append("let arr = app.init_datas();");
            jsc.Append("let str = \"\";");
            jsc.Append("for(var i=0; i<arr.length; i++) {");
            jsc.Append("if(i == 0) continue;");
            jsc.Append("var row = arr.item(i);");
            jsc.Append("var survey_obj = app.survey_obj(row);");
            jsc.Append("var comment_obj = app.comment_obj(row);");
            jsc.Append("var description_obj = app.description_obj(row);");
            jsc.Append("var srccode_obj = app.srccode_obj(row);");
            jsc.Append("var description = app.clean_text(app.get_text(description_obj));");
            jsc.Append("if(description == \"\") str += \" \" + app.sp;");
            jsc.Append("else str += description + app.sp;");
            jsc.Append("}");
            jsc.Append("return str;");
            return jsc.ToString();
        }
    }
}
